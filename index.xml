<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pythonic Frank</title>
    <link>/</link>
    <description>Recent content on Pythonic Frank</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Extract tabular data from PDF with Camelot</title>
      <link>/tutorial/extract_tabular_data_from_pdf_with_camelot/</link>
      <pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/extract_tabular_data_from_pdf_with_camelot/</guid>
      <description> Install Dependencies  Install Ghostscript:
 mac OS:  $brew install ghostscript
 Windows:  download ghostscript here
 pip install Camelot
$pip install camelot-py[cv]
  </description>
    </item>
    
    <item>
      <title>Host a static website in Heroku for FREE using Python Flask framework</title>
      <link>/tutorial/host_a_static_website_in_heroku/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/host_a_static_website_in_heroku/</guid>
      <description>Host a static website in Heroku for FREE using Python Flask framework Guideline: Part 1: Push your website live to Heroku 1.Follow Heroku Documention -Download [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) -Download [Heroku CLI](https://devcenter.heroku.com/articles/getting-started-with-python#set-up) (Command Line Interface)  2.Create a Heroku account 3.Create a project folder and organize the folder structure - in your Terminal / Command Line Prompt $mkdir Website_Example
$cd Website_Example
$mkdir templates
so your folder structure will look like:
Website_Example
 templates &amp;gt; index.</description>
    </item>
    
    <item>
      <title>Send Email from a custom domain with Mailgun API using Python</title>
      <link>/tutorial/mailgun/</link>
      <pubDate>Thu, 03 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/mailgun/</guid>
      <description>Send Email from a custom domain with Mailgun API using Python Intro There are plenty of tutorials on the Internet teaching how to send an Email using Python. Why bothering with another tutorial talking about sending Email with a custom domain? Well at this point, I agree with you that you&amp;rsquo;re right. But this tutorial is aiming for the folks who might be running a professional online business or website and looking for possibilities of sending customers and marketing emails in an easy and scalable manner while being able to maintain their brandings (Such as using their domains or sub-domains).</description>
    </item>
    
    <item>
      <title>Natural Language Processing and sentiment analysis with TextBlob: a Python NLP library</title>
      <link>/tutorial/second_posts/</link>
      <pubDate>Sun, 22 Apr 2018 11:11:42 +0200</pubDate>
      
      <guid>/tutorial/second_posts/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>/aboutme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/aboutme/</guid>
      <description>Python&amp;rsquo;s being now a major part of my life. This beautiful language has made my life much better and easier. After programming and using Python for 1.5 years, I thought now is a good time to(at least) give sth back to the community: share and teach about Python to help others that might potentially benefit from this beautiful language.
This blog (and the YouTube channel associated) is all about Python. However, I&amp;rsquo;m by no means a Python guru or expert and you might be going to see I&amp;rsquo;m making some serious mistakes or setting some bad examples in my video tutorials.</description>
    </item>
    
    <item>
      <title></title>
      <link>/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/contact/</guid>
      <description>title: Contact description: We&amp;rsquo;d love to hear from you type: page menu: main: {}
weight: 100  Your Name Email Address An email address is required.  Message   &amp;ndash;&amp;gt;</description>
    </item>
    
  </channel>
</rss>