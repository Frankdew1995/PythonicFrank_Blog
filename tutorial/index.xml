<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorials on Pythonic Frank</title>
    <link>/tutorial/</link>
    <description>Recent content in Tutorials on Pythonic Frank</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 07 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build a cloud based weather SMS service using Python, Twilio and PythonAnywhere</title>
      <link>/tutorial/build-a-personal-weather-sms-service-with-python-and-twilio/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/build-a-personal-weather-sms-service-with-python-and-twilio/</guid>
      <description> Prerequisites 1. Twilio: Twilio Account, Phone number, and account sid and auth token. 2. A PythonAnywhere account 3. An Open Weather Map acount and API Key Why doing this? How this works? ! </description>
    </item>
    
    <item>
      <title>Natural Language Processing and sentiment analysis with TextBlob: a Python NLP library</title>
      <link>/tutorial/nlp_and_sentiment_analysis_with_textblob_and_python/</link>
      <pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/nlp_and_sentiment_analysis_with_textblob_and_python/</guid>
      <description>What is NLP(Natural Language Processing)? Natural language processing (NLP) is a subfield of computer science, information engineering, and artificial intelligence concerned with the interactions between computers and human (natural) languages, in particular how to program computers to process and analyze large amounts of natural language data. (Wikepedia) Dependency to install: $ pip install textblob
 Some features of TextBlob:  Noun Phrase Extraction Sentiment Analysis Tokenization Words Lemmatization Spell Check Translation  # NLP_and_Sentiment_Analysis_With_TextBlob</description>
    </item>
    
    <item>
      <title>Host static websites with Netlify</title>
      <link>/tutorial/host_static_sites_with_netlify/</link>
      <pubDate>Sun, 17 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/host_static_sites_with_netlify/</guid>
      <description> Prerequisites  Sign Up a GitHub Account
 Sign up a Netlify Account or log in with your GitHub Account
 Install Git in your local machine.
   How it works? </description>
    </item>
    
    <item>
      <title>Send Email in Batch and Attachments with Mailgun API using Python</title>
      <link>/tutorial/batchsending_mailgun/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/batchsending_mailgun/</guid>
      <description>1.Batch Sending With Mailgun API  Step 1: create a mailing list in mailgun dashboard:
 You can upload a csv file to bulk upload to create a mailing list Or add one recipient at a time to create a mailing list.  Imagine you created a mailing list: no-reply@yourdomain.com
How to proceed with coding: A. Send a general email without a custom greeting using Mailgun Mailing List import requests  def batch_mailing(): requests.</description>
    </item>
    
    <item>
      <title>Send sms with Twilio API using Python</title>
      <link>/tutorial/send_sms_with_twilio_api_using_python/</link>
      <pubDate>Sun, 20 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/send_sms_with_twilio_api_using_python/</guid>
      <description> Guideline  Sign up for a Twilio account
 Grab a free Twilio phone number
 Grab credentials: account_sid and auth_token
   </description>
    </item>
    
    <item>
      <title>Extract tabular data from PDF with Camelot</title>
      <link>/tutorial/extract_tabular_data_from_pdf_with_camelot/</link>
      <pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/extract_tabular_data_from_pdf_with_camelot/</guid>
      <description> Install Dependencies  Install Ghostscript:
 mac OS:  $brew install ghostscript
 Windows:  download ghostscript here
 pip install Camelot
$pip install camelot-py[cv]
   </description>
    </item>
    
    <item>
      <title>Host a static website in Heroku for FREE using Python Flask framework</title>
      <link>/tutorial/host_a_static_website_in_heroku/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/host_a_static_website_in_heroku/</guid>
      <description>Host a static website in Heroku for FREE using Python Flask framework  Guideline: Part 1: Push your website live to Heroku 1.Follow Heroku Documention -Download [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) -Download [Heroku CLI](https://devcenter.heroku.com/articles/getting-started-with-python#set-up) (Command Line Interface)  2.Create a Heroku account 3.Create a project folder and organize the folder structure - in your Terminal / Command Line Prompt $mkdir Website_Example
$cd Website_Example
$mkdir templates
so your folder structure will look like:
Website_Example</description>
    </item>
    
    <item>
      <title>Send Email from a custom domain with Mailgun API using Python</title>
      <link>/tutorial/mailgun/</link>
      <pubDate>Thu, 03 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/mailgun/</guid>
      <description>Send Email from a custom domain with Mailgun API using Python Intro There are plenty of tutorials on the Internet teaching how to send an Email using Python. Why bothering with another tutorial talking about sending Email with a custom domain? Well at this point, I agree with you that you&amp;rsquo;re right. But this tutorial is aiming for the folks who might be running a professional online business or website and looking for possibilities of sending customers and marketing emails in an easy and scalable manner while being able to maintain their brandings (Such as using their domains or sub-domains).</description>
    </item>
    
    <item>
      <title></title>
      <link>/tutorial/draft/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/draft/</guid>
      <description>NLP_and_Sentiment_Analysis_With_TextBlob from textblob import TextBlob import nltk  Install &amp;ldquo;brown&amp;rdquo; and &amp;ldquo;wordnet&amp;rdquo; using NLTK:
nltk.download(&amp;quot;wordnet&amp;quot;) nltk.download(&amp;quot;brown&amp;quot;)  [nltk_data] Downloading package wordnet to /Users/frankdu/nltk_data... [nltk_data] Package wordnet is already up-to-date! [nltk_data] Downloading package brown to /Users/frankdu/nltk_data... [nltk_data] Package brown is already up-to-date! True  sample text data: zen of Python text1 = &#39;&#39;&#39; Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated.</description>
    </item>
    
  </channel>
</rss>